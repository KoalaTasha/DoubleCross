/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module square_wincon_55 (
    input clk,
    input rst,
    input [24:0] grid,
    output reg [1:0] winner
  );
  
  
  
  reg [80:0] M_square_d, M_square_q = 1'h0;
  
  always @* begin
    M_square_d = M_square_q;
    
    winner = 1'h0;
    M_square_d[0+0+8-:9] = {grid[2+0-:1], grid[1+0-:1], grid[0+0-:1], grid[12+0-:1], grid[11+0-:1], grid[10+0-:1], grid[5+0-:1], grid[6+0-:1], grid[7+0-:1]};
    M_square_d[9+0+8-:9] = {grid[3+0-:1], grid[2+0-:1], grid[1+0-:1], grid[13+0-:1], grid[12+0-:1], grid[11+0-:1], grid[6+0-:1], grid[7+0-:1], grid[8+0-:1]};
    M_square_d[18+0+8-:9] = {grid[4+0-:1], grid[3+0-:1], grid[2+0-:1], grid[14+0-:1], grid[13+0-:1], grid[12+0-:1], grid[7+0-:1], grid[8+0-:1], grid[9+0-:1]};
    M_square_d[27+0+8-:9] = {grid[7+0-:1], grid[6+0-:1], grid[5+0-:1], grid[17+0-:1], grid[16+0-:1], grid[15+0-:1], grid[10+0-:1], grid[11+0-:1], grid[12+0-:1]};
    M_square_d[36+0+8-:9] = {grid[8+0-:1], grid[7+0-:1], grid[6+0-:1], grid[18+0-:1], grid[17+0-:1], grid[16+0-:1], grid[11+0-:1], grid[12+0-:1], grid[13+0-:1]};
    M_square_d[45+0+8-:9] = {grid[9+0-:1], grid[8+0-:1], grid[7+0-:1], grid[19+0-:1], grid[18+0-:1], grid[17+0-:1], grid[12+0-:1], grid[13+0-:1], grid[14+0-:1]};
    M_square_d[54+0+8-:9] = {grid[12+0-:1], grid[11+0-:1], grid[10+0-:1], grid[22+0-:1], grid[21+0-:1], grid[20+0-:1], grid[15+0-:1], grid[16+0-:1], grid[17+0-:1]};
    M_square_d[63+0+8-:9] = {grid[13+0-:1], grid[12+0-:1], grid[11+0-:1], grid[23+0-:1], grid[22+0-:1], grid[21+0-:1], grid[16+0-:1], grid[17+0-:1], grid[18+0-:1]};
    M_square_d[72+0+8-:9] = {grid[14+0-:1], grid[13+0-:1], grid[12+0-:1], grid[24+0-:1], grid[23+0-:1], grid[22+0-:1], grid[17+0-:1], grid[18+0-:1], grid[19+0-:1]};
    winner[1+0-:1] = (M_square_q[0+8-:9] == 9'h1ff | M_square_q[9+8-:9] == 9'h1ff | M_square_q[18+8-:9] == 9'h1ff | M_square_q[27+8-:9] == 9'h1ff | M_square_q[36+8-:9] == 9'h1ff | M_square_q[45+8-:9] == 9'h1ff | M_square_q[54+8-:9] == 9'h1ff | M_square_q[63+8-:9] == 9'h1ff | M_square_q[72+8-:9] == 9'h1ff);
    winner[0+0-:1] = (M_square_q[0+8-:9] == 9'h000 | M_square_q[9+8-:9] == 9'h000 | M_square_q[18+8-:9] == 9'h000 | M_square_q[27+8-:9] == 9'h000 | M_square_q[36+8-:9] == 9'h000 | M_square_q[45+8-:9] == 9'h000 | M_square_q[54+8-:9] == 9'h000 | M_square_q[63+8-:9] == 9'h000 | M_square_q[72+8-:9] == 9'h000);
  end
  
  always @(posedge clk) begin
    M_square_q <= M_square_d;
  end
  
endmodule
